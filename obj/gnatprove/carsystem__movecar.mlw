module Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type integer = <range -2147483648 2147483647>
  
  val function first : int
    ensures { result = ((- 2147483648) : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = integer,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type integer__ref = { mutable integer__content : integer }
  
  function integer__ref_integer__content__projection (a: integer__ref) : integer =
    a.integer__content
  
  meta "model_projection" function integer__ref_integer__content__projection
  
  meta "inline:no" function integer__ref_integer__content__projection
  
  val integer__havoc (x: integer__ref) : unit
    writes { x }
end

module Standard__positive
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type positive = <range 1 2147483647>
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = positive,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type positive__ref = { mutable positive__content : positive }
  
  function positive__ref_positive__content__projection (a: positive__ref) : positive =
    a.positive__content
  
  meta "model_projection" function positive__ref_positive__content__projection
  
  meta "inline:no" function positive__ref_positive__content__projection
  
  val positive__havoc (x: positive__ref) : unit
    writes { x }
end

module Standard__character
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type character
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (255 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = character,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type character__ref = { mutable character__content : character }
  
  function character__ref_character__content__projection (a: character__ref) : character =
    a.character__content
  
  meta "model_projection" function character__ref_character__content__projection
  
  meta "inline:no" function character__ref_character__content__projection
  
  val character__havoc (x: character__ref) : unit
    writes { x }
end

module Standard__character__rep
  use Standard__character as Standard__character
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__character.character,
    predicate in_range = Standard__character.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Array__Int__Standard__character
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  
  function index_I1_one : int = 1 : int
  
  type component_type = Standard__character.character
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_98 : int.
          if ((a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last)) then
            ((Standard__character__rep.to_rep ((get a) temp___idx_98))
               = (Standard__character__rep.to_rep
                    ((get b) ((b__first - a__first) + temp___idx_98))))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_98 : int.
                 if ((a__first <= temp___idx_98) /\
                       (temp___idx_98 <= a__last)) then
                   ((Standard__character__rep.to_rep ((get a) temp___idx_98))
                      = (Standard__character__rep.to_rep
                           ((get b) ((b__first - a__first) + temp___idx_98))))
                 else true)))
end

module Standard__integer__rep
  use Standard__integer as Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Standard__integer.integer) : int =
    Standard__integer.integer'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__integer.integer,
    predicate in_range = Standard__integer.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Standard__string
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__positive as Standard__positive
  use Standard__character as Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Standard__integer__rep as Standard__integer__rep
  
  type component_type = Standard__character.character
  
  function index_1_id (x: int) : int = x
  
  clone export ada__model.Unconstr_Array with
    axiom .,
    type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = Int.( <= )
  
  type string__ = __t
  
  meta "model_projection" function to_array
  
  meta "inline:no" function to_array
  
  meta "model_projection" function first
  
  meta "inline:no" function first
  
  meta "model_projection" function last
  
  meta "inline:no" function last
  
  type string____ref = { mutable string____content : string__ }
  
  function string____ref_string____content__projection (a: string____ref) : string__ =
    a.string____content
  
  meta "model_projection" function string____ref_string____content__projection
  
  meta "inline:no" function string____ref_string____content__projection
  
  val string____havoc (x: string____ref) : unit
    writes { x }
end

module Carsystem__batterychargerange
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type batterychargerange = <range 0 100>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (100 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = batterychargerange,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type batterychargerange__ref = {
                                mutable batterychargerange__content :
                                  batterychargerange
                                }
  
  function batterychargerange__ref_batterychargerange__content__projection (a: batterychargerange__ref) : batterychargerange =
    a.batterychargerange__content
  
  meta "model_projection" function batterychargerange__ref_batterychargerange__content__projection
  
  meta "inline:no" function batterychargerange__ref_batterychargerange__content__projection
  
  val batterychargerange__havoc (x: batterychargerange__ref) : unit
    writes { x }
end

module Carsystem__batterychargerange__rep
  use Carsystem__batterychargerange as Carsystem__batterychargerange
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Carsystem__batterychargerange.batterychargerange) : int =
    Carsystem__batterychargerange.batterychargerange'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Carsystem__batterychargerange.batterychargerange,
    predicate in_range = Carsystem__batterychargerange.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Carsystem__speedrange
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type speedrange = <range 0 100>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (100 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = speedrange,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type speedrange__ref = { mutable speedrange__content : speedrange }
  
  function speedrange__ref_speedrange__content__projection (a: speedrange__ref) : speedrange =
    a.speedrange__content
  
  meta "model_projection" function speedrange__ref_speedrange__content__projection
  
  meta "inline:no" function speedrange__ref_speedrange__content__projection
  
  val speedrange__havoc (x: speedrange__ref) : unit
    writes { x }
end

module Carsystem__speedrange__rep
  use Carsystem__speedrange as Carsystem__speedrange
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Carsystem__speedrange.speedrange) : int =
    Carsystem__speedrange.speedrange'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Carsystem__speedrange.speedrange,
    predicate in_range = Carsystem__speedrange.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Carsystem__gearrange
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type gearrange = <range 0 2>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (2 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = gearrange,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type gearrange__ref = { mutable gearrange__content : gearrange }
  
  function gearrange__ref_gearrange__content__projection (a: gearrange__ref) : gearrange =
    a.gearrange__content
  
  meta "model_projection" function gearrange__ref_gearrange__content__projection
  
  meta "inline:no" function gearrange__ref_gearrange__content__projection
  
  val gearrange__havoc (x: gearrange__ref) : unit
    writes { x }
end

module Carsystem__gearrange__rep
  use Carsystem__gearrange as Carsystem__gearrange
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Carsystem__gearrange.gearrange) : int =
    Carsystem__gearrange.gearrange'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Carsystem__gearrange.gearrange,
    predicate in_range = Carsystem__gearrange.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Carsystem__car__rep
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use Standard__integer as Standard__integer
  use Standard__integer__rep as Standard__integer__rep
  use Carsystem__batterychargerange as Carsystem__batterychargerange
  use Carsystem__batterychargerange__rep as Carsystem__batterychargerange__rep
  use Carsystem__speedrange as Carsystem__speedrange
  use Carsystem__speedrange__rep as Carsystem__speedrange__rep
  use Carsystem__gearrange as Carsystem__gearrange
  use Carsystem__gearrange__rep as Carsystem__gearrange__rep
  
  type __split_fields = {
                       rec__carsystem__car__isstarted : bool;
                       rec__carsystem__car__sensordetect : bool;
                       rec__carsystem__car__isdiagmode : bool;
                       rec__carsystem__car__isbatterywarning : bool;
                       rec__carsystem__car__isregenbraking : bool;
                       rec__carsystem__car__predictedcharge :
                         Standard__integer.integer;
                       rec__carsystem__car__previousspeed :
                         Carsystem__speedrange.speedrange;
                       rec__carsystem__car__speed :
                         Carsystem__speedrange.speedrange;
                       rec__carsystem__car__desiredspeed :
                         Carsystem__speedrange.speedrange;
                       rec__carsystem__car__battery :
                         Carsystem__batterychargerange.batterychargerange;
                       rec__carsystem__car__gear :
                         Carsystem__gearrange.gearrange
                       }
  
  function __split_fields_rec__carsystem__car__isstarted__projection (a: __split_fields) : bool =
    a.rec__carsystem__car__isstarted
  
  meta "model_projection" function __split_fields_rec__carsystem__car__isstarted__projection
  
  meta "inline:no" function __split_fields_rec__carsystem__car__isstarted__projection
  
  function __split_fields_rec__carsystem__car__sensordetect__projection (a: __split_fields) : bool =
    a.rec__carsystem__car__sensordetect
  
  meta "model_projection" function __split_fields_rec__carsystem__car__sensordetect__projection
  
  meta "inline:no" function __split_fields_rec__carsystem__car__sensordetect__projection
  
  function __split_fields_rec__carsystem__car__isdiagmode__projection (a: __split_fields) : bool =
    a.rec__carsystem__car__isdiagmode
  
  meta "model_projection" function __split_fields_rec__carsystem__car__isdiagmode__projection
  
  meta "inline:no" function __split_fields_rec__carsystem__car__isdiagmode__projection
  
  function __split_fields_rec__carsystem__car__isbatterywarning__projection (a: __split_fields) : bool =
    a.rec__carsystem__car__isbatterywarning
  
  meta "model_projection" function __split_fields_rec__carsystem__car__isbatterywarning__projection
  
  meta "inline:no" function __split_fields_rec__carsystem__car__isbatterywarning__projection
  
  function __split_fields_rec__carsystem__car__isregenbraking__projection (a: __split_fields) : bool =
    a.rec__carsystem__car__isregenbraking
  
  meta "model_projection" function __split_fields_rec__carsystem__car__isregenbraking__projection
  
  meta "inline:no" function __split_fields_rec__carsystem__car__isregenbraking__projection
  
  function __split_fields_rec__carsystem__car__predictedcharge__projection (a: __split_fields) : 
    Standard__integer.integer =
    a.rec__carsystem__car__predictedcharge
  
  meta "model_projection" function __split_fields_rec__carsystem__car__predictedcharge__projection
  
  meta "inline:no" function __split_fields_rec__carsystem__car__predictedcharge__projection
  
  function __split_fields_rec__carsystem__car__previousspeed__projection (a: __split_fields) : 
    Carsystem__speedrange.speedrange =
    a.rec__carsystem__car__previousspeed
  
  meta "model_projection" function __split_fields_rec__carsystem__car__previousspeed__projection
  
  meta "inline:no" function __split_fields_rec__carsystem__car__previousspeed__projection
  
  function __split_fields_rec__carsystem__car__speed__projection (a: __split_fields) : 
    Carsystem__speedrange.speedrange =
    a.rec__carsystem__car__speed
  
  meta "model_projection" function __split_fields_rec__carsystem__car__speed__projection
  
  meta "inline:no" function __split_fields_rec__carsystem__car__speed__projection
  
  function __split_fields_rec__carsystem__car__desiredspeed__projection (a: __split_fields) : 
    Carsystem__speedrange.speedrange =
    a.rec__carsystem__car__desiredspeed
  
  meta "model_projection" function __split_fields_rec__carsystem__car__desiredspeed__projection
  
  meta "inline:no" function __split_fields_rec__carsystem__car__desiredspeed__projection
  
  function __split_fields_rec__carsystem__car__battery__projection (a: __split_fields) : 
    Carsystem__batterychargerange.batterychargerange =
    a.rec__carsystem__car__battery
  
  meta "model_projection" function __split_fields_rec__carsystem__car__battery__projection
  
  meta "inline:no" function __split_fields_rec__carsystem__car__battery__projection
  
  function __split_fields_rec__carsystem__car__gear__projection (a: __split_fields) : 
    Carsystem__gearrange.gearrange =
    a.rec__carsystem__car__gear
  
  meta "model_projection" function __split_fields_rec__carsystem__car__gear__projection
  
  meta "inline:no" function __split_fields_rec__carsystem__car__gear__projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields }
  
  function __rep___split_fields__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__projection
  
  meta "inline:no" function __rep___split_fields__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate carsystem__car__isstarted__pred (a: __rep) = true
  
  val carsystem__car__isstarted__pred (a: __rep) : bool
    ensures { result <-> (carsystem__car__isstarted__pred (a : __rep)) }
  
  val rec__carsystem__car__isstarted_ (a: __rep) : bool
    requires { carsystem__car__isstarted__pred a }
    ensures { (result = ((__split_fields a).rec__carsystem__car__isstarted)) }
  
  predicate carsystem__car__sensordetect__pred (a: __rep) = true
  
  val carsystem__car__sensordetect__pred (a: __rep) : bool
    ensures { result <-> (carsystem__car__sensordetect__pred (a : __rep)) }
  
  val rec__carsystem__car__sensordetect_ (a: __rep) : bool
    requires { carsystem__car__sensordetect__pred a }
    ensures { (result
                 = ((__split_fields a).rec__carsystem__car__sensordetect)) }
  
  predicate carsystem__car__isdiagmode__pred (a: __rep) = true
  
  val carsystem__car__isdiagmode__pred (a: __rep) : bool
    ensures { result <-> (carsystem__car__isdiagmode__pred (a : __rep)) }
  
  val rec__carsystem__car__isdiagmode_ (a: __rep) : bool
    requires { carsystem__car__isdiagmode__pred a }
    ensures { (result = ((__split_fields a).rec__carsystem__car__isdiagmode)) }
  
  predicate carsystem__car__isbatterywarning__pred (a: __rep) = true
  
  val carsystem__car__isbatterywarning__pred (a: __rep) : bool
    ensures { result <-> (carsystem__car__isbatterywarning__pred (a : __rep)) }
  
  val rec__carsystem__car__isbatterywarning_ (a: __rep) : bool
    requires { carsystem__car__isbatterywarning__pred a }
    ensures { (result
                 = ((__split_fields a).rec__carsystem__car__isbatterywarning)) }
  
  predicate carsystem__car__isregenbraking__pred (a: __rep) = true
  
  val carsystem__car__isregenbraking__pred (a: __rep) : bool
    ensures { result <-> (carsystem__car__isregenbraking__pred (a : __rep)) }
  
  val rec__carsystem__car__isregenbraking_ (a: __rep) : bool
    requires { carsystem__car__isregenbraking__pred a }
    ensures { (result
                 = ((__split_fields a).rec__carsystem__car__isregenbraking)) }
  
  predicate carsystem__car__predictedcharge__pred (a: __rep) = true
  
  val carsystem__car__predictedcharge__pred (a: __rep) : bool
    ensures { result <-> (carsystem__car__predictedcharge__pred (a : __rep)) }
  
  val rec__carsystem__car__predictedcharge_ (a: __rep) : Standard__integer.integer
    requires { carsystem__car__predictedcharge__pred a }
    ensures { (result
                 = ((__split_fields a).rec__carsystem__car__predictedcharge)) }
  
  predicate carsystem__car__previousspeed__pred (a: __rep) = true
  
  val carsystem__car__previousspeed__pred (a: __rep) : bool
    ensures { result <-> (carsystem__car__previousspeed__pred (a : __rep)) }
  
  val rec__carsystem__car__previousspeed_ (a: __rep) : Carsystem__speedrange.speedrange
    requires { carsystem__car__previousspeed__pred a }
    ensures { (result
                 = ((__split_fields a).rec__carsystem__car__previousspeed)) }
  
  predicate carsystem__car__speed__pred (a: __rep) = true
  
  val carsystem__car__speed__pred (a: __rep) : bool
    ensures { result <-> (carsystem__car__speed__pred (a : __rep)) }
  
  val rec__carsystem__car__speed_ (a: __rep) : Carsystem__speedrange.speedrange
    requires { carsystem__car__speed__pred a }
    ensures { (result = ((__split_fields a).rec__carsystem__car__speed)) }
  
  predicate carsystem__car__desiredspeed__pred (a: __rep) = true
  
  val carsystem__car__desiredspeed__pred (a: __rep) : bool
    ensures { result <-> (carsystem__car__desiredspeed__pred (a : __rep)) }
  
  val rec__carsystem__car__desiredspeed_ (a: __rep) : Carsystem__speedrange.speedrange
    requires { carsystem__car__desiredspeed__pred a }
    ensures { (result
                 = ((__split_fields a).rec__carsystem__car__desiredspeed)) }
  
  predicate carsystem__car__battery__pred (a: __rep) = true
  
  val carsystem__car__battery__pred (a: __rep) : bool
    ensures { result <-> (carsystem__car__battery__pred (a : __rep)) }
  
  val rec__carsystem__car__battery_ (a: __rep) : Carsystem__batterychargerange.batterychargerange
    requires { carsystem__car__battery__pred a }
    ensures { (result = ((__split_fields a).rec__carsystem__car__battery)) }
  
  predicate carsystem__car__gear__pred (a: __rep) = true
  
  val carsystem__car__gear__pred (a: __rep) : bool
    ensures { result <-> (carsystem__car__gear__pred (a : __rep)) }
  
  val rec__carsystem__car__gear_ (a: __rep) : Carsystem__gearrange.gearrange
    requires { carsystem__car__gear__pred a }
    ensures { (result = ((__split_fields a).rec__carsystem__car__gear)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if ((((Boolean.to_int ((__split_fields a).rec__carsystem__car__isstarted))
            = (Boolean.to_int
                 ((__split_fields b).rec__carsystem__car__isstarted))) /\
           ((Boolean.to_int
               ((__split_fields a).rec__carsystem__car__sensordetect))
              = (Boolean.to_int
                   ((__split_fields b).rec__carsystem__car__sensordetect)))) /\
          ((((((Boolean.to_int
                  ((__split_fields a).rec__carsystem__car__isdiagmode))
                 = (Boolean.to_int
                      ((__split_fields b).rec__carsystem__car__isdiagmode))) /\
                ((Boolean.to_int
                    ((__split_fields a).rec__carsystem__car__isbatterywarning))
                   = (Boolean.to_int
                        ((__split_fields b).rec__carsystem__car__isbatterywarning)))) /\
               ((Boolean.to_int
                   ((__split_fields a).rec__carsystem__car__isregenbraking))
                  = (Boolean.to_int
                       ((__split_fields b).rec__carsystem__car__isregenbraking)))) /\
              (((Standard__integer__rep.to_rep
                   ((__split_fields a).rec__carsystem__car__predictedcharge))
                  = (Standard__integer__rep.to_rep
                       ((__split_fields b).rec__carsystem__car__predictedcharge))) /\
                 ((Carsystem__speedrange__rep.to_rep
                     ((__split_fields a).rec__carsystem__car__previousspeed))
                    = (Carsystem__speedrange__rep.to_rep
                         ((__split_fields b).rec__carsystem__car__previousspeed))))) /\
             ((((Carsystem__speedrange__rep.to_rep
                   ((__split_fields a).rec__carsystem__car__speed))
                  = (Carsystem__speedrange__rep.to_rep
                       ((__split_fields b).rec__carsystem__car__speed))) /\
                 ((Carsystem__speedrange__rep.to_rep
                     ((__split_fields a).rec__carsystem__car__desiredspeed))
                    = (Carsystem__speedrange__rep.to_rep
                         ((__split_fields b).rec__carsystem__car__desiredspeed)))) /\
                (((Carsystem__batterychargerange__rep.to_rep
                     ((__split_fields a).rec__carsystem__car__battery))
                    = (Carsystem__batterychargerange__rep.to_rep
                         ((__split_fields b).rec__carsystem__car__battery))) /\
                   ((Carsystem__gearrange__rep.to_rep
                       ((__split_fields a).rec__carsystem__car__gear))
                      = (Carsystem__gearrange__rep.to_rep
                           ((__split_fields b).rec__carsystem__car__gear))))))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
end

module Carsystem__car
  use export Carsystem__car__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type car = __rep
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function carsystem__car__isstarted__first__bit : int
  
  val function carsystem__car__isstarted__last__bit : int
  
  val function carsystem__car__isstarted__position : int
  
  axiom carsystem__car__isstarted__first__bit_axiom:
    (carsystem__car__isstarted__first__bit >= (0 : int))
  
  axiom carsystem__car__isstarted__last__bit_axiom:
    (carsystem__car__isstarted__last__bit
       > carsystem__car__isstarted__first__bit)
  
  axiom carsystem__car__isstarted__position_axiom:
    (carsystem__car__isstarted__position >= (0 : int))
  
  val function carsystem__car__sensordetect__first__bit : int
  
  val function carsystem__car__sensordetect__last__bit : int
  
  val function carsystem__car__sensordetect__position : int
  
  axiom carsystem__car__sensordetect__first__bit_axiom:
    (carsystem__car__sensordetect__first__bit >= (0 : int))
  
  axiom carsystem__car__sensordetect__last__bit_axiom:
    (carsystem__car__sensordetect__last__bit
       > carsystem__car__sensordetect__first__bit)
  
  axiom carsystem__car__sensordetect__position_axiom:
    (carsystem__car__sensordetect__position >= (0 : int))
  
  val function carsystem__car__isdiagmode__first__bit : int
  
  val function carsystem__car__isdiagmode__last__bit : int
  
  val function carsystem__car__isdiagmode__position : int
  
  axiom carsystem__car__isdiagmode__first__bit_axiom:
    (carsystem__car__isdiagmode__first__bit >= (0 : int))
  
  axiom carsystem__car__isdiagmode__last__bit_axiom:
    (carsystem__car__isdiagmode__last__bit
       > carsystem__car__isdiagmode__first__bit)
  
  axiom carsystem__car__isdiagmode__position_axiom:
    (carsystem__car__isdiagmode__position >= (0 : int))
  
  val function carsystem__car__isbatterywarning__first__bit : int
  
  val function carsystem__car__isbatterywarning__last__bit : int
  
  val function carsystem__car__isbatterywarning__position : int
  
  axiom carsystem__car__isbatterywarning__first__bit_axiom:
    (carsystem__car__isbatterywarning__first__bit >= (0 : int))
  
  axiom carsystem__car__isbatterywarning__last__bit_axiom:
    (carsystem__car__isbatterywarning__last__bit
       > carsystem__car__isbatterywarning__first__bit)
  
  axiom carsystem__car__isbatterywarning__position_axiom:
    (carsystem__car__isbatterywarning__position >= (0 : int))
  
  val function carsystem__car__isregenbraking__first__bit : int
  
  val function carsystem__car__isregenbraking__last__bit : int
  
  val function carsystem__car__isregenbraking__position : int
  
  axiom carsystem__car__isregenbraking__first__bit_axiom:
    (carsystem__car__isregenbraking__first__bit >= (0 : int))
  
  axiom carsystem__car__isregenbraking__last__bit_axiom:
    (carsystem__car__isregenbraking__last__bit
       > carsystem__car__isregenbraking__first__bit)
  
  axiom carsystem__car__isregenbraking__position_axiom:
    (carsystem__car__isregenbraking__position >= (0 : int))
  
  val function carsystem__car__predictedcharge__first__bit : int
  
  val function carsystem__car__predictedcharge__last__bit : int
  
  val function carsystem__car__predictedcharge__position : int
  
  axiom carsystem__car__predictedcharge__first__bit_axiom:
    (carsystem__car__predictedcharge__first__bit >= (0 : int))
  
  axiom carsystem__car__predictedcharge__last__bit_axiom:
    (carsystem__car__predictedcharge__last__bit
       > carsystem__car__predictedcharge__first__bit)
  
  axiom carsystem__car__predictedcharge__position_axiom:
    (carsystem__car__predictedcharge__position >= (0 : int))
  
  val function carsystem__car__previousspeed__first__bit : int
  
  val function carsystem__car__previousspeed__last__bit : int
  
  val function carsystem__car__previousspeed__position : int
  
  axiom carsystem__car__previousspeed__first__bit_axiom:
    (carsystem__car__previousspeed__first__bit >= (0 : int))
  
  axiom carsystem__car__previousspeed__last__bit_axiom:
    (carsystem__car__previousspeed__last__bit
       > carsystem__car__previousspeed__first__bit)
  
  axiom carsystem__car__previousspeed__position_axiom:
    (carsystem__car__previousspeed__position >= (0 : int))
  
  val function carsystem__car__speed__first__bit : int
  
  val function carsystem__car__speed__last__bit : int
  
  val function carsystem__car__speed__position : int
  
  axiom carsystem__car__speed__first__bit_axiom:
    (carsystem__car__speed__first__bit >= (0 : int))
  
  axiom carsystem__car__speed__last__bit_axiom:
    (carsystem__car__speed__last__bit > carsystem__car__speed__first__bit)
  
  axiom carsystem__car__speed__position_axiom:
    (carsystem__car__speed__position >= (0 : int))
  
  val function carsystem__car__desiredspeed__first__bit : int
  
  val function carsystem__car__desiredspeed__last__bit : int
  
  val function carsystem__car__desiredspeed__position : int
  
  axiom carsystem__car__desiredspeed__first__bit_axiom:
    (carsystem__car__desiredspeed__first__bit >= (0 : int))
  
  axiom carsystem__car__desiredspeed__last__bit_axiom:
    (carsystem__car__desiredspeed__last__bit
       > carsystem__car__desiredspeed__first__bit)
  
  axiom carsystem__car__desiredspeed__position_axiom:
    (carsystem__car__desiredspeed__position >= (0 : int))
  
  val function carsystem__car__battery__first__bit : int
  
  val function carsystem__car__battery__last__bit : int
  
  val function carsystem__car__battery__position : int
  
  axiom carsystem__car__battery__first__bit_axiom:
    (carsystem__car__battery__first__bit >= (0 : int))
  
  axiom carsystem__car__battery__last__bit_axiom:
    (carsystem__car__battery__last__bit
       > carsystem__car__battery__first__bit)
  
  axiom carsystem__car__battery__position_axiom:
    (carsystem__car__battery__position >= (0 : int))
  
  val function carsystem__car__gear__first__bit : int
  
  val function carsystem__car__gear__last__bit : int
  
  val function carsystem__car__gear__position : int
  
  axiom carsystem__car__gear__first__bit_axiom:
    (carsystem__car__gear__first__bit >= (0 : int))
  
  axiom carsystem__car__gear__last__bit_axiom:
    (carsystem__car__gear__last__bit > carsystem__car__gear__first__bit)
  
  axiom carsystem__car__gear__position_axiom:
    (carsystem__car__gear__position >= (0 : int))
  
  val function user_eq (a: car) (b: car) : bool
  
  val function dummy : car
  
  type car__ref = { mutable car__content : car }
  
  function car__ref_car__content__projection (a: car__ref) : car =
    a.car__content
  
  meta "model_projection" function car__ref_car__content__projection
  
  meta "inline:no" function car__ref_car__content__projection
  
  val car__havoc (x: car__ref) : unit
    writes { x }
end

module Carsystem__car___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use Standard__integer as Standard__integer
  use Standard__integer__rep as Standard__integer__rep
  use Carsystem__car as Carsystem__car
  use Carsystem__batterychargerange as Carsystem__batterychargerange
  use Carsystem__batterychargerange__rep as Carsystem__batterychargerange__rep
  use Carsystem__speedrange as Carsystem__speedrange
  use Carsystem__speedrange__rep as Carsystem__speedrange__rep
  use Carsystem__gearrange as Carsystem__gearrange
  use Carsystem__gearrange__rep as Carsystem__gearrange__rep
  
  predicate dynamic_invariant (temp___expr_188: Carsystem__car.car) (temp___is_init_184: bool) (temp___skip_constant_185: bool) (temp___do_toplevel_186: bool) (temp___do_typ_inv_187: bool) =
    true
  
  val dynamic_invariant (temp___expr_188: Carsystem__car.car) (temp___is_init_184: bool) (temp___skip_constant_185: bool) (temp___do_toplevel_186: bool) (temp___do_typ_inv_187: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_188 : Carsystem__car.car))
                      (temp___is_init_184 : bool))
                     (temp___skip_constant_185 : bool))
                    (temp___do_toplevel_186 : bool))
                   (temp___do_typ_inv_187 : bool)) }
  
  predicate default_initial_assumption (temp___expr_189: Carsystem__car.car) (temp___skip_top_level_190: bool) =
    (((if (Carsystem__car.carsystem__car__isstarted__pred temp___expr_189) then
         (((Carsystem__car.__split_fields temp___expr_189).Carsystem__car.rec__carsystem__car__isstarted)
            = (Boolean.of_int (0 : int)))
       else true) /\
        (if (Carsystem__car.carsystem__car__sensordetect__pred
               temp___expr_189) then
           (((Carsystem__car.__split_fields temp___expr_189).Carsystem__car.rec__carsystem__car__sensordetect)
              = (Boolean.of_int (0 : int)))
         else true)) /\
       (((((if (Carsystem__car.carsystem__car__isdiagmode__pred
                  temp___expr_189) then
              (((Carsystem__car.__split_fields temp___expr_189).Carsystem__car.rec__carsystem__car__isdiagmode)
                 = (Boolean.of_int (0 : int)))
            else true) /\
             (if (Carsystem__car.carsystem__car__isbatterywarning__pred
                    temp___expr_189) then
                (((Carsystem__car.__split_fields temp___expr_189).Carsystem__car.rec__carsystem__car__isbatterywarning)
                   = (Boolean.of_int (0 : int)))
              else true)) /\
            (if (Carsystem__car.carsystem__car__isregenbraking__pred
                   temp___expr_189) then
               (((Carsystem__car.__split_fields temp___expr_189).Carsystem__car.rec__carsystem__car__isregenbraking)
                  = (Boolean.of_int (0 : int)))
             else true)) /\
           ((if (Carsystem__car.carsystem__car__predictedcharge__pred
                   temp___expr_189) then
               ((Standard__integer__rep.to_rep
                   ((Carsystem__car.__split_fields temp___expr_189).Carsystem__car.rec__carsystem__car__predictedcharge))
                  = (0 : int))
             else true) /\
              (if (Carsystem__car.carsystem__car__previousspeed__pred
                     temp___expr_189) then
                 ((Carsystem__speedrange__rep.to_rep
                     ((Carsystem__car.__split_fields temp___expr_189).
                        Carsystem__car.rec__carsystem__car__previousspeed))
                    = (0 : int))
               else true))) /\
          (((if (Carsystem__car.carsystem__car__speed__pred temp___expr_189) then
               ((Carsystem__speedrange__rep.to_rep
                   ((Carsystem__car.__split_fields temp___expr_189).Carsystem__car.rec__carsystem__car__speed))
                  = (0 : int))
             else true) /\
              (if (Carsystem__car.carsystem__car__desiredspeed__pred
                     temp___expr_189) then
                 ((Carsystem__speedrange__rep.to_rep
                     ((Carsystem__car.__split_fields temp___expr_189).
                        Carsystem__car.rec__carsystem__car__desiredspeed))
                    = (0 : int))
               else true)) /\
             ((if (Carsystem__car.carsystem__car__battery__pred
                     temp___expr_189) then
                 ((Carsystem__batterychargerange__rep.to_rep
                     ((Carsystem__car.__split_fields temp___expr_189).
                        Carsystem__car.rec__carsystem__car__battery))
                    = (0 : int))
               else true) /\
                (if (Carsystem__car.carsystem__car__gear__pred
                       temp___expr_189) then
                   ((Carsystem__gearrange__rep.to_rep
                       ((Carsystem__car.__split_fields temp___expr_189).
                          Carsystem__car.rec__carsystem__car__gear))
                      = (0 : int))
                 else true)))))
  
  val default_initial_assumption (temp___expr_189: Carsystem__car.car) (temp___skip_top_level_190: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_189 : Carsystem__car.car))
                   (temp___skip_top_level_190 : bool)) }
end

module Ada___ada__text_io__file_system
  use _gnatprove_standard.Main
  use int.Int
  
  val file_system : Main.__private__ref
end

module Ada___ada__text_io__standard_in
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_in : Main.__private__ref
end

module Ada___ada__text_io__standard_out
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_out : Main.__private__ref
end

module Ada___ada__text_io__standard_err
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_err : Main.__private__ref
end

module Ada___ada__text_io__current_in
  use _gnatprove_standard.Main
  use int.Int
  
  val current_in : Main.__private__ref
end

module Ada___ada__text_io__current_out
  use _gnatprove_standard.Main
  use int.Int
  
  val current_out : Main.__private__ref
end

module Ada___ada__text_io__current_err
  use _gnatprove_standard.Main
  use int.Int
  
  val current_err : Main.__private__ref
end

module Ada___ada__real_time__clock_time
  use _gnatprove_standard.Main
  use int.Int
  
  val clock_time : Main.__private__ref
end

module Carsystem__checkregenbraking___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Carsystem__car as Carsystem__car
  use Carsystem__car___axiom as Carsystem__car___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__real_time__clock_time as Ada___ada__real_time__clock_time
  
  val checkregenbraking (this__split_fields: Carsystem__car.__split_fields__ref) : 
    unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err,
      Ada___ada__real_time__clock_time.clock_time }
    requires { true }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err, this__split_fields }
    ensures { ((((Carsystem__car___axiom.dynamic_invariant
                    { Carsystem__car.__split_fields =
                        (Carsystem__car.__split_fields__content
                            this__split_fields) })
                   True)
                  True)
                 True)
                True }
end

module Carsystem__checkbatterywarning___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Carsystem__car as Carsystem__car
  use Carsystem__car___axiom as Carsystem__car___axiom
  
  val checkbatterywarning (this__split_fields: Carsystem__car.__split_fields__ref) : 
    unit
    requires { true }
    writes { this__split_fields }
    ensures { ((((Carsystem__car___axiom.dynamic_invariant
                    { Carsystem__car.__split_fields =
                        (Carsystem__car.__split_fields__content
                            this__split_fields) })
                   True)
                  True)
                 True)
                True }
end

module Carsystem__objectahead
  use _gnatprove_standard.Main
  use int.Int
  
  val objectahead : bool__ref
end

module Carsystem__objectbehind
  use _gnatprove_standard.Main
  use int.Int
  
  val objectbehind : bool__ref
end

module Carsystem__checksensor___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Carsystem__objectahead as Carsystem__objectahead
  use Carsystem__objectbehind as Carsystem__objectbehind
  use Carsystem__car as Carsystem__car
  use Carsystem__car___axiom as Carsystem__car___axiom
  
  val checksensor (this__split_fields: Carsystem__car.__split_fields__ref) : 
    unit
    reads { Carsystem__objectahead.objectahead,
      Carsystem__objectbehind.objectbehind }
    requires { true }
    writes { this__split_fields }
    ensures { ((((Carsystem__car___axiom.dynamic_invariant
                    { Carsystem__car.__split_fields =
                        (Carsystem__car.__split_fields__content
                            this__split_fields) })
                   True)
                  True)
                 True)
                True }
end

module Carsystem__movecar__this
  use _gnatprove_standard.Main
  use int.Int
  use Carsystem__car as Carsystem__car
  
  val this__split_fields : Carsystem__car.__split_fields__ref
end

module Carsystem__emergencystop___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Carsystem__car as Carsystem__car
  use Carsystem__car___axiom as Carsystem__car___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__real_time__clock_time as Ada___ada__real_time__clock_time
  
  val emergencystop (this__split_fields: Carsystem__car.__split_fields__ref) : 
    unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err,
      Ada___ada__real_time__clock_time.clock_time }
    requires { true }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err, this__split_fields }
    ensures { ((((Carsystem__car___axiom.dynamic_invariant
                    { Carsystem__car.__split_fields =
                        (Carsystem__car.__split_fields__content
                            this__split_fields) })
                   True)
                  True)
                 True)
                True }
end

module Ada___ada__text_io__line_length__2
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  
  val function line_length (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private) : int
  
  val predicate line_length__function_guard (temp___result_161: int) (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private)
end

module Ada___ada__text_io__page_length__2
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  
  val function page_length (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private) : int
  
  val predicate page_length__function_guard (temp___result_162: int) (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private)
end

module Ada___ada__text_io__put_line__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Standard__string as Standard__string
  use Ada___ada__text_io__line_length__2 as Ada___ada__text_io__line_length__2
  use Ada___ada__text_io__page_length__2 as Ada___ada__text_io__page_length__2
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val put_line (item: Standard__string.string__) : unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err }
    ensures { (([@GP_Pretty_Ada:4150]
                ((old (((((((Ada___ada__text_io__line_length__2.line_length
                               (Main.__private__content
                                   Ada___ada__text_io__file_system.file_system))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_in.standard_in))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_out.standard_out))
                            (Main.__private__content
                                Ada___ada__text_io__standard_err.standard_err))
                           (Main.__private__content
                               Ada___ada__text_io__current_in.current_in))
                          (Main.__private__content
                              Ada___ada__text_io__current_out.current_out))
                         (Main.__private__content
                             Ada___ada__text_io__current_err.current_err)))
                   = (((((((Ada___ada__text_io__line_length__2.line_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err)))) /\
                 ([@GP_Pretty_Ada:4156]
                  ((old (((((((Ada___ada__text_io__page_length__2.page_length
                                 (Main.__private__content
                                     Ada___ada__text_io__file_system.file_system))
                                (Main.__private__content
                                    Ada___ada__text_io__standard_in.standard_in))
                               (Main.__private__content
                                   Ada___ada__text_io__standard_out.standard_out))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_err.standard_err))
                             (Main.__private__content
                                 Ada___ada__text_io__current_in.current_in))
                            (Main.__private__content
                                Ada___ada__text_io__current_out.current_out))
                           (Main.__private__content
                               Ada___ada__text_io__current_err.current_err)))
                     = (((((((Ada___ada__text_io__page_length__2.page_length
                                (Main.__private__content
                                    Ada___ada__text_io__file_system.file_system))
                               (Main.__private__content
                                   Ada___ada__text_io__standard_in.standard_in))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_out.standard_out))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_err.standard_err))
                            (Main.__private__content
                                Ada___ada__text_io__current_in.current_in))
                           (Main.__private__content
                               Ada___ada__text_io__current_out.current_out))
                          (Main.__private__content
                              Ada___ada__text_io__current_err.current_err))))) }
end

module Temp___String_Literal_259
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_259 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_259__def_axiom:
    forall __void_param : unit [temp___String_Literal_259 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_259 __void_param))
               (1 : int)))
           = (79 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_259 __void_param))
                 (2 : int)))
             = (66 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_259 __void_param))
                      (3 : int)))
                  = (74 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_259 __void_param))
                        (4 : int)))
                    = (69 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_259 __void_param))
                       (5 : int)))
                   = (67 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_259 __void_param))
                       (6 : int)))
                   = (84 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_259 __void_param))
                         (7 : int)))
                     = (32 : int)))) /\
              (((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_259 __void_param))
                        (8 : int)))
                    = (68 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_259 __void_param))
                          (9 : int)))
                      = (69 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_259 __void_param))
                         (10 : int)))
                     = (84 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_259 __void_param))
                         (11 : int)))
                     = (69 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_259 __void_param))
                           (12 : int)))
                       = (67 : int))))) /\
             ((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_259 __void_param))
                        (13 : int)))
                    = (84 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_259 __void_param))
                          (14 : int)))
                      = (69 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_259 __void_param))
                         (15 : int)))
                     = (68 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_259 __void_param))
                         (16 : int)))
                     = (44 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_259 __void_param))
                           (17 : int)))
                       = (32 : int)))) /\
                (((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_259 __void_param))
                          (18 : int)))
                      = (69 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_259 __void_param))
                            (19 : int)))
                        = (88 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_259 __void_param))
                           (20 : int)))
                       = (69 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_259 __void_param))
                           (21 : int)))
                       = (67 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_259 __void_param))
                             (22 : int)))
                         = (85 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_259 __void_param))
                        (23 : int)))
                    = (84 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_259 __void_param))
                          (24 : int)))
                      = (73 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_259 __void_param))
                         (25 : int)))
                     = (78 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_259 __void_param))
                         (26 : int)))
                     = (71 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_259 __void_param))
                           (27 : int)))
                       = (32 : int)))) /\
                (((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_259 __void_param))
                          (28 : int)))
                      = (69 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_259 __void_param))
                            (29 : int)))
                        = (77 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_259 __void_param))
                           (30 : int)))
                       = (69 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_259 __void_param))
                           (31 : int)))
                       = (82 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_259 __void_param))
                             (32 : int)))
                         = (71 : int))))) /\
               ((((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_259 __void_param))
                          (33 : int)))
                      = (69 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_259 __void_param))
                            (34 : int)))
                        = (78 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_259 __void_param))
                           (35 : int)))
                       = (67 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_259 __void_param))
                           (36 : int)))
                       = (89 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_259 __void_param))
                             (37 : int)))
                         = (32 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_259 __void_param))
                           (38 : int)))
                       = (83 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_259 __void_param))
                             (39 : int)))
                         = (84 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_259 __void_param))
                             (40 : int)))
                         = (79 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_259 __void_param))
                               (41 : int)))
                           = (80 : int))))))))
end

module Temp___String_Literal_262
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_262 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_262__def_axiom:
    forall __void_param : unit [temp___String_Literal_262 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_262 __void_param))
               (1 : int)))
           = (66 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_262 __void_param))
                 (2 : int)))
             = (65 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_262 __void_param))
                      (3 : int)))
                  = (84 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_262 __void_param))
                        (4 : int)))
                    = (84 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_262 __void_param))
                       (5 : int)))
                   = (69 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_262 __void_param))
                       (6 : int)))
                   = (82 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_262 __void_param))
                         (7 : int)))
                     = (89 : int)))) /\
              (((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_262 __void_param))
                        (8 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_262 __void_param))
                          (9 : int)))
                      = (87 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_262 __void_param))
                         (10 : int)))
                     = (65 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_262 __void_param))
                         (11 : int)))
                     = (82 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_262 __void_param))
                           (12 : int)))
                       = (78 : int))))) /\
             ((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_262 __void_param))
                        (13 : int)))
                    = (73 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_262 __void_param))
                          (14 : int)))
                      = (78 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_262 __void_param))
                         (15 : int)))
                     = (71 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_262 __void_param))
                         (16 : int)))
                     = (44 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_262 __void_param))
                           (17 : int)))
                       = (32 : int)))) /\
                (((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_262 __void_param))
                          (18 : int)))
                      = (69 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_262 __void_param))
                            (19 : int)))
                        = (88 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_262 __void_param))
                           (20 : int)))
                       = (69 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_262 __void_param))
                           (21 : int)))
                       = (67 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_262 __void_param))
                             (22 : int)))
                         = (85 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_262 __void_param))
                        (23 : int)))
                    = (84 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_262 __void_param))
                          (24 : int)))
                      = (73 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_262 __void_param))
                         (25 : int)))
                     = (78 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_262 __void_param))
                         (26 : int)))
                     = (71 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_262 __void_param))
                           (27 : int)))
                       = (32 : int)))) /\
                (((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_262 __void_param))
                          (28 : int)))
                      = (69 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_262 __void_param))
                            (29 : int)))
                        = (77 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_262 __void_param))
                           (30 : int)))
                       = (69 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_262 __void_param))
                           (31 : int)))
                       = (82 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_262 __void_param))
                             (32 : int)))
                         = (71 : int))))) /\
               ((((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_262 __void_param))
                          (33 : int)))
                      = (69 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_262 __void_param))
                            (34 : int)))
                        = (78 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_262 __void_param))
                           (35 : int)))
                       = (67 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_262 __void_param))
                           (36 : int)))
                       = (89 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_262 __void_param))
                             (37 : int)))
                         = (32 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_262 __void_param))
                           (38 : int)))
                       = (83 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_262 __void_param))
                             (39 : int)))
                         = (84 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_262 __void_param))
                             (40 : int)))
                         = (79 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_262 __void_param))
                               (41 : int)))
                           = (80 : int))))))))
end

module Temp___String_Literal_265
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_265 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_265__def_axiom:
    forall __void_param : unit [temp___String_Literal_265 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_265 __void_param))
               (1 : int)))
           = (99 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_265 __void_param))
                 (2 : int)))
             = (97 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_265 __void_param))
                     (3 : int)))
                 = (110 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_265 __void_param))
                       (4 : int)))
                   = (110 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_265 __void_param))
                       (5 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_265 __void_param))
                         (6 : int)))
                     = (116 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_265 __void_param))
                       (7 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_265 __void_param))
                         (8 : int)))
                     = (109 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_265 __void_param))
                        (9 : int)))
                    = (111 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_265 __void_param))
                       (10 : int)))
                   = (118 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_265 __void_param))
                         (11 : int)))
                     = (101 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_265 __void_param))
                        (12 : int)))
                    = (44 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_265 __void_param))
                         (13 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_265 __void_param))
                           (14 : int)))
                       = (99 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_265 __void_param))
                          (15 : int)))
                      = (97 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_265 __void_param))
                       (16 : int)))
                   = (114 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_265 __void_param))
                         (17 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_265 __void_param))
                         (18 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_265 __void_param))
                           (19 : int)))
                       = (111 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_265 __void_param))
                         (20 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_265 __void_param))
                           (21 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_265 __void_param))
                          (22 : int)))
                      = (115 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_265 __void_param))
                         (23 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_265 __void_param))
                           (24 : int)))
                       = (97 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_265 __void_param))
                          (25 : int)))
                      = (114 : int))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_265 __void_param))
                           (26 : int)))
                       = (116 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_265 __void_param))
                             (27 : int)))
                         = (101 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_265 __void_param))
                            (28 : int)))
                        = (100 : int)))))))
end

module Temp___String_Literal_267
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_267 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_267__def_axiom:
    forall __void_param : unit [temp___String_Literal_267 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_267 __void_param))
               (1 : int)))
           = (99 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_267 __void_param))
                 (2 : int)))
             = (97 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_267 __void_param))
                      (3 : int)))
                  = (110 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_267 __void_param))
                        (4 : int)))
                    = (110 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_267 __void_param))
                       (5 : int)))
                   = (111 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_267 __void_param))
                       (6 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_267 __void_param))
                         (7 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_267 __void_param))
                       (8 : int)))
                   = (109 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_267 __void_param))
                         (9 : int)))
                     = (111 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_267 __void_param))
                         (10 : int)))
                     = (118 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_267 __void_param))
                           (11 : int)))
                       = (101 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_267 __void_param))
                       (12 : int)))
                   = (44 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_267 __void_param))
                         (13 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_267 __void_param))
                         (14 : int)))
                     = (99 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_267 __void_param))
                           (15 : int)))
                       = (97 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_267 __void_param))
                         (16 : int)))
                     = (114 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_267 __void_param))
                           (17 : int)))
                       = (32 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_267 __void_param))
                           (18 : int)))
                       = (105 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_267 __void_param))
                             (19 : int)))
                         = (110 : int)))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_267 __void_param))
                       (20 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_267 __void_param))
                         (21 : int)))
                     = (68 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_267 __void_param))
                         (22 : int)))
                     = (73 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_267 __void_param))
                           (23 : int)))
                       = (65 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_267 __void_param))
                         (24 : int)))
                     = (71 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_267 __void_param))
                           (25 : int)))
                       = (78 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_267 __void_param))
                           (26 : int)))
                       = (79 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_267 __void_param))
                             (27 : int)))
                         = (83 : int))))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_267 __void_param))
                         (28 : int)))
                     = (84 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_267 __void_param))
                           (29 : int)))
                       = (73 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_267 __void_param))
                           (30 : int)))
                       = (67 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_267 __void_param))
                             (31 : int)))
                         = (32 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_267 __void_param))
                           (32 : int)))
                       = (109 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_267 __void_param))
                             (33 : int)))
                         = (111 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_267 __void_param))
                             (34 : int)))
                         = (100 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_267 __void_param))
                               (35 : int)))
                           = (101 : int))))))))
end

module Temp___String_Literal_269
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_269 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_269__def_axiom:
    forall __void_param : unit [temp___String_Literal_269 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_269 __void_param))
               (1 : int)))
           = (99 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_269 __void_param))
                 (2 : int)))
             = (97 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_269 __void_param))
                     (3 : int)))
                 = (110 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_269 __void_param))
                       (4 : int)))
                   = (110 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_269 __void_param))
                       (5 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_269 __void_param))
                         (6 : int)))
                     = (116 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_269 __void_param))
                       (7 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_269 __void_param))
                         (8 : int)))
                     = (109 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_269 __void_param))
                         (9 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_269 __void_param))
                           (10 : int)))
                       = (118 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_269 __void_param))
                       (11 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_269 __void_param))
                         (12 : int)))
                     = (44 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_269 __void_param))
                         (13 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_269 __void_param))
                           (14 : int)))
                       = (99 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_269 __void_param))
                         (15 : int)))
                     = (97 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_269 __void_param))
                           (16 : int)))
                       = (114 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_269 __void_param))
                          (17 : int)))
                      = (32 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_269 __void_param))
                       (18 : int)))
                   = (105 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_269 __void_param))
                         (19 : int)))
                     = (110 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_269 __void_param))
                         (20 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_269 __void_param))
                           (21 : int)))
                       = (80 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_269 __void_param))
                         (22 : int)))
                     = (65 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_269 __void_param))
                           (23 : int)))
                       = (82 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_269 __void_param))
                           (24 : int)))
                       = (75 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_269 __void_param))
                             (25 : int)))
                         = (73 : int))))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_269 __void_param))
                         (26 : int)))
                     = (78 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_269 __void_param))
                           (27 : int)))
                       = (71 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_269 __void_param))
                           (28 : int)))
                       = (32 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_269 __void_param))
                             (29 : int)))
                         = (103 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_269 __void_param))
                           (30 : int)))
                       = (101 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_269 __void_param))
                             (31 : int)))
                         = (97 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_269 __void_param))
                            (32 : int)))
                        = (114 : int)))))))
end

module Standard__integer___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  
  predicate dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) =
    if ((temp___is_init_14 = True) \/
          (Standard__integer.first <= Standard__integer.last)) then
      (((Standard__integer.dynamic_property Standard__integer.first)
          Standard__integer.last)
         temp___expr_18)
    else true
  
  val dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_18 : int))
                      (temp___is_init_14 : bool))
                     (temp___skip_constant_15 : bool))
                    (temp___do_toplevel_16 : bool))
                   (temp___do_typ_inv_17 : bool)) }
  
  predicate default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) =
    true
  
  val default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_19 : int))
                   (temp___skip_top_level_20 : bool)) }
end

module Standard__positive___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__positive as Standard__positive
  
  predicate dynamic_invariant (temp___expr_53: int) (temp___is_init_49: bool) (temp___skip_constant_50: bool) (temp___do_toplevel_51: bool) (temp___do_typ_inv_52: bool) =
    if ((temp___is_init_49 = True) \/
          (Standard__positive.first <= Standard__positive.last)) then
      (((Standard__positive.dynamic_property Standard__positive.first)
          Standard__positive.last)
         temp___expr_53)
    else true
  
  val dynamic_invariant (temp___expr_53: int) (temp___is_init_49: bool) (temp___skip_constant_50: bool) (temp___do_toplevel_51: bool) (temp___do_typ_inv_52: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_53 : int))
                      (temp___is_init_49 : bool))
                     (temp___skip_constant_50 : bool))
                    (temp___do_toplevel_51 : bool))
                   (temp___do_typ_inv_52 : bool)) }
  
  predicate default_initial_assumption (temp___expr_54: int) (temp___skip_top_level_55: bool) =
    true
  
  val default_initial_assumption (temp___expr_54: int) (temp___skip_top_level_55: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_54 : int))
                   (temp___skip_top_level_55 : bool)) }
end

module Standard__character___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  
  predicate dynamic_invariant (temp___expr_81: int) (temp___is_init_77: bool) (temp___skip_constant_78: bool) (temp___do_toplevel_79: bool) (temp___do_typ_inv_80: bool) =
    if ((temp___is_init_77 = True) \/
          (Standard__character.first <= Standard__character.last)) then
      (((Standard__character.dynamic_property Standard__character.first)
          Standard__character.last)
         temp___expr_81)
    else true
  
  val dynamic_invariant (temp___expr_81: int) (temp___is_init_77: bool) (temp___skip_constant_78: bool) (temp___do_toplevel_79: bool) (temp___do_typ_inv_80: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_81 : int))
                      (temp___is_init_77 : bool))
                     (temp___skip_constant_78 : bool))
                    (temp___do_toplevel_79 : bool))
                   (temp___do_typ_inv_80 : bool)) }
  
  predicate default_initial_assumption (temp___expr_82: int) (temp___skip_top_level_83: bool) =
    true
  
  val default_initial_assumption (temp___expr_82: int) (temp___skip_top_level_83: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_82 : int))
                   (temp___skip_top_level_83 : bool)) }
end

module Standard__string___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__positive as Standard__positive
  use Standard__string as Standard__string
  
  predicate dynamic_invariant (temp___expr_103: Standard__string.string__) (temp___is_init_99: bool) (temp___skip_constant_100: bool) (temp___do_toplevel_101: bool) (temp___do_typ_inv_102: bool) =
    if temp___skip_constant_100 then true
    else
      ((((Standard__string.dynamic_property Standard__positive.first)
           Standard__positive.last)
          (Standard__string.first temp___expr_103))
         (Standard__string.last temp___expr_103))
  
  val dynamic_invariant (temp___expr_103: Standard__string.string__) (temp___is_init_99: bool) (temp___skip_constant_100: bool) (temp___do_toplevel_101: bool) (temp___do_typ_inv_102: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_103 : Standard__string.string__))
                      (temp___is_init_99 : bool))
                     (temp___skip_constant_100 : bool))
                    (temp___do_toplevel_101 : bool))
                   (temp___do_typ_inv_102 : bool)) }
end

module Carsystem__batterychargerange___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Carsystem__batterychargerange as Carsystem__batterychargerange
  
  predicate dynamic_invariant (temp___expr_167: int) (temp___is_init_163: bool) (temp___skip_constant_164: bool) (temp___do_toplevel_165: bool) (temp___do_typ_inv_166: bool) =
    if ((temp___is_init_163 = True) \/
          (Carsystem__batterychargerange.first
             <= Carsystem__batterychargerange.last)) then
      (((Carsystem__batterychargerange.dynamic_property
           Carsystem__batterychargerange.first)
          Carsystem__batterychargerange.last)
         temp___expr_167)
    else true
  
  val dynamic_invariant (temp___expr_167: int) (temp___is_init_163: bool) (temp___skip_constant_164: bool) (temp___do_toplevel_165: bool) (temp___do_typ_inv_166: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_167 : int))
                      (temp___is_init_163 : bool))
                     (temp___skip_constant_164 : bool))
                    (temp___do_toplevel_165 : bool))
                   (temp___do_typ_inv_166 : bool)) }
  
  predicate default_initial_assumption (temp___expr_168: int) (temp___skip_top_level_169: bool) =
    true
  
  val default_initial_assumption (temp___expr_168: int) (temp___skip_top_level_169: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_168 : int))
                   (temp___skip_top_level_169 : bool)) }
end

module Carsystem__speedrange___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Carsystem__speedrange as Carsystem__speedrange
  
  predicate dynamic_invariant (temp___expr_174: int) (temp___is_init_170: bool) (temp___skip_constant_171: bool) (temp___do_toplevel_172: bool) (temp___do_typ_inv_173: bool) =
    if ((temp___is_init_170 = True) \/
          (Carsystem__speedrange.first <= Carsystem__speedrange.last)) then
      (((Carsystem__speedrange.dynamic_property Carsystem__speedrange.first)
          Carsystem__speedrange.last)
         temp___expr_174)
    else true
  
  val dynamic_invariant (temp___expr_174: int) (temp___is_init_170: bool) (temp___skip_constant_171: bool) (temp___do_toplevel_172: bool) (temp___do_typ_inv_173: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_174 : int))
                      (temp___is_init_170 : bool))
                     (temp___skip_constant_171 : bool))
                    (temp___do_toplevel_172 : bool))
                   (temp___do_typ_inv_173 : bool)) }
  
  predicate default_initial_assumption (temp___expr_175: int) (temp___skip_top_level_176: bool) =
    true
  
  val default_initial_assumption (temp___expr_175: int) (temp___skip_top_level_176: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_175 : int))
                   (temp___skip_top_level_176 : bool)) }
end

module Carsystem__objectahead___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Carsystem__objectbehind___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Carsystem__gearrange___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Carsystem__gearrange as Carsystem__gearrange
  
  predicate dynamic_invariant (temp___expr_181: int) (temp___is_init_177: bool) (temp___skip_constant_178: bool) (temp___do_toplevel_179: bool) (temp___do_typ_inv_180: bool) =
    if ((temp___is_init_177 = True) \/
          (Carsystem__gearrange.first <= Carsystem__gearrange.last)) then
      (((Carsystem__gearrange.dynamic_property Carsystem__gearrange.first)
          Carsystem__gearrange.last)
         temp___expr_181)
    else true
  
  val dynamic_invariant (temp___expr_181: int) (temp___is_init_177: bool) (temp___skip_constant_178: bool) (temp___do_toplevel_179: bool) (temp___do_typ_inv_180: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_181 : int))
                      (temp___is_init_177 : bool))
                     (temp___skip_constant_178 : bool))
                    (temp___do_toplevel_179 : bool))
                   (temp___do_typ_inv_180 : bool)) }
  
  predicate default_initial_assumption (temp___expr_182: int) (temp___skip_top_level_183: bool) =
    true
  
  val default_initial_assumption (temp___expr_182: int) (temp___skip_top_level_183: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_182 : int))
                   (temp___skip_top_level_183 : bool)) }
end

module Carsystem__movecar__this___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Ada___ada__text_io__count
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type count = <range 0 2147483647>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = count,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type count__ref = { mutable count__content : count }
  
  function count__ref_count__content__projection (a: count__ref) : count =
    a.count__content
  
  meta "model_projection" function count__ref_count__content__projection
  
  meta "inline:no" function count__ref_count__content__projection
  
  val count__havoc (x: count__ref) : unit
    writes { x }
end

module Ada___ada__text_io__count___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Ada___ada__text_io__count as Ada___ada__text_io__count
  
  predicate dynamic_invariant (temp___expr_195: int) (temp___is_init_191: bool) (temp___skip_constant_192: bool) (temp___do_toplevel_193: bool) (temp___do_typ_inv_194: bool) =
    if ((temp___is_init_191 = True) \/
          (Ada___ada__text_io__count.first <= Ada___ada__text_io__count.last)) then
      (((Ada___ada__text_io__count.dynamic_property
           Ada___ada__text_io__count.first)
          Ada___ada__text_io__count.last)
         temp___expr_195)
    else true
  
  val dynamic_invariant (temp___expr_195: int) (temp___is_init_191: bool) (temp___skip_constant_192: bool) (temp___do_toplevel_193: bool) (temp___do_typ_inv_194: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_195 : int))
                      (temp___is_init_191 : bool))
                     (temp___skip_constant_192 : bool))
                    (temp___do_toplevel_193 : bool))
                   (temp___do_typ_inv_194 : bool)) }
  
  predicate default_initial_assumption (temp___expr_196: int) (temp___skip_top_level_197: bool) =
    true
  
  val default_initial_assumption (temp___expr_196: int) (temp___skip_top_level_197: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_196 : int))
                   (temp___skip_top_level_197 : bool)) }
end

module Ada___ada__text_io__line_length__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__line_length__2 as Ada___ada__text_io__line_length__2
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val line_length (__void_param: unit) : int
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes {  }
    ensures { (((result
                   = (((((((Ada___ada__text_io__line_length__2.line_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err))) /\
                  true) /\
                 (((((Ada___ada__text_io__count___axiom.dynamic_invariant
                        result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom line_length__post_axiom:
    forall Ada___ada__text_io__file_system___file_system___ : Main.__private, Ada___ada__text_io__standard_in___standard_in___ : 
          Main.__private, Ada___ada__text_io__standard_out___standard_out___ : 
          Main.__private, Ada___ada__text_io__standard_err___standard_err___ : 
          Main.__private, Ada___ada__text_io__current_in___current_in___ : 
          Main.__private, Ada___ada__text_io__current_out___current_out___ : 
          Main.__private, Ada___ada__text_io__current_err___current_err___ : 
          Main.__private
          [((((((Ada___ada__text_io__line_length__2.line_length
                   Ada___ada__text_io__file_system___file_system___)
                  Ada___ada__text_io__standard_in___standard_in___)
                 Ada___ada__text_io__standard_out___standard_out___)
                Ada___ada__text_io__standard_err___standard_err___)
               Ada___ada__text_io__current_in___current_in___)
              Ada___ada__text_io__current_out___current_out___)
             Ada___ada__text_io__current_err___current_err___].
      let result =
        ((((((Ada___ada__text_io__line_length__2.line_length
                Ada___ada__text_io__file_system___file_system___)
               Ada___ada__text_io__standard_in___standard_in___)
              Ada___ada__text_io__standard_out___standard_out___)
             Ada___ada__text_io__standard_err___standard_err___)
            Ada___ada__text_io__current_in___current_in___)
           Ada___ada__text_io__current_out___current_out___)
          Ada___ada__text_io__current_err___current_err___ in
      ((true /\
          (((((Ada___ada__text_io__count___axiom.dynamic_invariant result)
                True)
               False)
              True)
             True)) /\
         true)
end

module Ada___ada__text_io__page_length__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__page_length__2 as Ada___ada__text_io__page_length__2
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val page_length (__void_param: unit) : int
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes {  }
    ensures { (((result
                   = (((((((Ada___ada__text_io__page_length__2.page_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err))) /\
                  true) /\
                 (((((Ada___ada__text_io__count___axiom.dynamic_invariant
                        result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom page_length__post_axiom:
    forall Ada___ada__text_io__file_system___file_system___ : Main.__private, Ada___ada__text_io__standard_in___standard_in___ : 
          Main.__private, Ada___ada__text_io__standard_out___standard_out___ : 
          Main.__private, Ada___ada__text_io__standard_err___standard_err___ : 
          Main.__private, Ada___ada__text_io__current_in___current_in___ : 
          Main.__private, Ada___ada__text_io__current_out___current_out___ : 
          Main.__private, Ada___ada__text_io__current_err___current_err___ : 
          Main.__private
          [((((((Ada___ada__text_io__page_length__2.page_length
                   Ada___ada__text_io__file_system___file_system___)
                  Ada___ada__text_io__standard_in___standard_in___)
                 Ada___ada__text_io__standard_out___standard_out___)
                Ada___ada__text_io__standard_err___standard_err___)
               Ada___ada__text_io__current_in___current_in___)
              Ada___ada__text_io__current_out___current_out___)
             Ada___ada__text_io__current_err___current_err___].
      let result =
        ((((((Ada___ada__text_io__page_length__2.page_length
                Ada___ada__text_io__file_system___file_system___)
               Ada___ada__text_io__standard_in___standard_in___)
              Ada___ada__text_io__standard_out___standard_out___)
             Ada___ada__text_io__standard_err___standard_err___)
            Ada___ada__text_io__current_in___current_in___)
           Ada___ada__text_io__current_out___current_out___)
          Ada___ada__text_io__current_err___current_err___ in
      ((true /\
          (((((Ada___ada__text_io__count___axiom.dynamic_invariant result)
                True)
               False)
              True)
             True)) /\
         true)
end

module Carsystem__movecar__subprogram_def
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Main as Main
  use _gnatprove_standard.Boolean as Boolean
  use Standard__string as Standard__string
  use Carsystem__car as Carsystem__car
  use Carsystem__car___axiom as Carsystem__car___axiom
  use Carsystem__checkregenbraking___axiom as Carsystem__checkregenbraking___axiom
  use Carsystem__checkbatterywarning___axiom as Carsystem__checkbatterywarning___axiom
  use Carsystem__checksensor___axiom as Carsystem__checksensor___axiom
  use Carsystem__movecar__this as Carsystem__movecar__this
  use Carsystem__emergencystop___axiom as Carsystem__emergencystop___axiom
  use Ada___ada__text_io__put_line__2___axiom as Ada___ada__text_io__put_line__2___axiom
  use Carsystem__batterychargerange as Carsystem__batterychargerange
  use Carsystem__batterychargerange__rep as Carsystem__batterychargerange__rep
  use Carsystem__speedrange as Carsystem__speedrange
  use Carsystem__speedrange__rep as Carsystem__speedrange__rep
  use Carsystem__gearrange as Carsystem__gearrange
  use Carsystem__gearrange__rep as Carsystem__gearrange__rep
  use Temp___String_Literal_259 as Temp___String_Literal_259
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_262 as Temp___String_Literal_262
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_265 as Temp___String_Literal_265
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_267 as Temp___String_Literal_267
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_269 as Temp___String_Literal_269
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__positive___axiom as Standard__positive___axiom
  use Standard__character___axiom as Standard__character___axiom
  use Standard__string___axiom as Standard__string___axiom
  use Standard__integer___axiom as Standard__integer___axiom
  use Carsystem__batterychargerange___axiom as Carsystem__batterychargerange___axiom
  use Carsystem__speedrange___axiom as Carsystem__speedrange___axiom
  use Carsystem__objectahead___axiom as Carsystem__objectahead___axiom
  use Carsystem__objectbehind___axiom as Carsystem__objectbehind___axiom
  use Carsystem__gearrange___axiom as Carsystem__gearrange___axiom
  use Carsystem__car___axiom as Carsystem__car___axiom
  use Carsystem__checkregenbraking___axiom as Carsystem__checkregenbraking___axiom
  use Carsystem__checkbatterywarning___axiom as Carsystem__checkbatterywarning___axiom
  use Carsystem__checksensor___axiom as Carsystem__checksensor___axiom
  use Carsystem__movecar__this___axiom as Carsystem__movecar__this___axiom
  use Carsystem__emergencystop___axiom as Carsystem__emergencystop___axiom
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__line_length__2___axiom as Ada___ada__text_io__line_length__2___axiom
  use Ada___ada__text_io__page_length__2___axiom as Ada___ada__text_io__page_length__2___axiom
  use Ada___ada__text_io__put_line__2___axiom as Ada___ada__text_io__put_line__2___axiom
  
  let def (__void_param : unit)
    requires { [#"carsystem.ads" 76 0 0] true }
  = [@vc:divergent]
    (([@GNAT-comment:Assume dynamic invariants of inputs of the subprogram carsystem.ads:76]
      ());
     ([#"carsystem.ads" 76 0 0]
      assume {
        [#"carsystem.ads" 76 0 0]
        (((((Carsystem__car___axiom.dynamic_invariant
               { Carsystem__car.__split_fields =
                   (Carsystem__car.__split_fields__content
                       Carsystem__movecar__this.this__split_fields) })
              True)
             False)
            True)
           True) });
     ([@GNAT-comment:Assume moved pointers in outputs of the subprogram carsystem.ads:76]
      ());
     ([@GNAT-comment:Check for RTE in the Pre of the subprogram carsystem.ads:76]
      ());
     ([#"carsystem.ads" 76 0 0]
      (begin
         ensures { true }
         let _ =
           let _ =
             (Boolean.andb
                ((Carsystem__speedrange__rep.to_rep
                    ((Carsystem__car.__split_fields
                         { Carsystem__car.__split_fields =
                             (Carsystem__car.__split_fields__content
                                 Carsystem__movecar__this.this__split_fields) }).
                       Carsystem__car.rec__carsystem__car__desiredspeed))
                   >= (0 : int)))
               ((Carsystem__speedrange__rep.to_rep
                   ((Carsystem__car.__split_fields
                        { Carsystem__car.__split_fields =
                            (Carsystem__car.__split_fields__content
                                Carsystem__movecar__this.this__split_fields) }).
                      Carsystem__car.rec__carsystem__car__desiredspeed))
                  <= (100 : int)) in
           () in
         ()
       end));
     ([@GNAT-comment:Assume Pre of the subprogram carsystem.ads:76] ());
     ([#"carsystem.ads" 76 0 0]
      assume {
        [#"carsystem.ads" 76 0 0]
        (([@GP_Pretty_Ada:1755]
          ((Carsystem__speedrange__rep.to_rep
              ((Carsystem__car.__split_fields
                   { Carsystem__car.__split_fields =
                       (Carsystem__car.__split_fields__content
                           Carsystem__movecar__this.this__split_fields) }).
                 Carsystem__car.rec__carsystem__car__desiredspeed))
             >= (0 : int))) /\
           ([@GP_Pretty_Ada:1763]
            ((Carsystem__speedrange__rep.to_rep
                ((Carsystem__car.__split_fields
                     { Carsystem__car.__split_fields =
                         (Carsystem__car.__split_fields__content
                             Carsystem__movecar__this.this__split_fields) }).
                   Carsystem__car.rec__carsystem__car__desiredspeed))
               <= (100 : int)))) });
     ([#"carsystem.ads" 76 0 0]
      (try
         ([@GP_Sloc:carsystem.adb:93:7]
          [#"carsystem.adb" 93 0 0]
          (if (([#"carsystem.adb" 93 0 0]
                [#"carsystem.adb" 93 0 0]
                (([@branch_id=1196] Main.spark__branch).bool__content <-
                   ((Carsystem__speedrange__rep.to_rep
                       ((Carsystem__car.__split_fields
                            { Carsystem__car.__split_fields =
                                (Carsystem__car.__split_fields__content
                                    Carsystem__movecar__this.this__split_fields) }).
                          Carsystem__car.rec__carsystem__car__previousspeed))
                      = (0 : int))));
               (([@branch_id=1196] Main.spark__branch).bool__content)) then
             ([@GP_Sloc:carsystem.adb:94:29]
              [#"carsystem.adb" 94 0 0]
              (let temp___256 =
                 let temp___255 =
                   { Carsystem__car.__split_fields =
                       (Carsystem__car.__split_fields__content
                           Carsystem__movecar__this.this__split_fields) } in
                 ([#"carsystem.adb" 94 0 0]
                  (begin
                     ensures { true }
                     let _ =
                       let _ =
                         (Carsystem__car.__split_fields temp___255).Carsystem__car.rec__carsystem__car__previousspeed in
                       () in
                     ()
                   end));
                 ({ temp___255 with
                    Carsystem__car.__split_fields =
                      ({ (Carsystem__car.__split_fields temp___255) with
                         Carsystem__car.rec__carsystem__car__previousspeed =
                           (Carsystem__speedrange__rep.of_rep
                              (Carsystem__speedrange__rep.to_rep
                                 ((Carsystem__car.__split_fields
                                      { Carsystem__car.__split_fields =
                                          (Carsystem__car.__split_fields__content
                                              Carsystem__movecar__this.this__split_fields) }).
                                    Carsystem__car.rec__carsystem__car__speed))) }) }) in
               [#"carsystem.adb" 94 0 0]
               (Carsystem__movecar__this.this__split_fields.Carsystem__car.__split_fields__content <-
                  (Carsystem__car.__split_fields temp___256))))
           else ()));
         ([@GP_Sloc:carsystem.adb:96:7] [#"carsystem.adb" 96 0 0] ());
         ([@GP_Sloc:carsystem.adb:96:7]
          [#"carsystem.adb" 96 0 0]
          (let temp___compl_257 =
             { Carsystem__car.__split_fields =
                 (Carsystem__car.__split_fields__content
                     Carsystem__movecar__this.this__split_fields) } in
           ([#"carsystem.adb" 96 0 0] (val _f : unit in
                                       _f));
           (Carsystem__checksensor___axiom.checksensor
              Carsystem__movecar__this.this__split_fields)));
         ([@GP_Sloc:carsystem.adb:97:7] [#"carsystem.adb" 97 0 0] ());
         ([@GP_Sloc:carsystem.adb:97:7]
          [#"carsystem.adb" 97 0 0]
          (let temp___compl_258 =
             { Carsystem__car.__split_fields =
                 (Carsystem__car.__split_fields__content
                     Carsystem__movecar__this.this__split_fields) } in
           ([#"carsystem.adb" 97 0 0] (val _f : unit in
                                       _f));
           (Carsystem__checkbatterywarning___axiom.checkbatterywarning
              Carsystem__movecar__this.this__split_fields)));
         ([@GP_Sloc:carsystem.adb:98:7]
          [#"carsystem.adb" 98 0 0]
          (if (([#"carsystem.adb" 98 0 0]
                [#"carsystem.adb" 98 0 0]
                (([@branch_id=1216] Main.spark__branch).bool__content <-
                   ((Carsystem__car.__split_fields
                        { Carsystem__car.__split_fields =
                            (Carsystem__car.__split_fields__content
                                Carsystem__movecar__this.this__split_fields) }).
                      Carsystem__car.rec__carsystem__car__sensordetect)));
               (([@branch_id=1216] Main.spark__branch).bool__content)) then
             (([@GP_Sloc:carsystem.adb:99:10] [#"carsystem.adb" 99 0 0] ());
              ([@GP_Sloc:carsystem.adb:99:10]
               [#"carsystem.adb" 99 0 0]
               (([#"carsystem.adb" 99 0 0] (val _f : unit in
                                            _f));
                (Ada___ada__text_io__put_line__2___axiom.put_line
                   (let temp___260 =
                      Temp___String_Literal_259.temp___String_Literal_259 () in
                    ((Standard__string.of_array temp___260) (1 : int))
                      (41 : int)))));
              ([@GP_Sloc:carsystem.adb:100:10]
               [#"carsystem.adb" 100 0 0] [#"carsystem.adb" 100 0 0] ());
              ([@GP_Sloc:carsystem.adb:101:10] [#"carsystem.adb" 101 0 0] ());
              ([@GP_Sloc:carsystem.adb:101:10]
               [#"carsystem.adb" 101 0 0]
               (let temp___compl_261 =
                  { Carsystem__car.__split_fields =
                      (Carsystem__car.__split_fields__content
                          Carsystem__movecar__this.this__split_fields) } in
                ([#"carsystem.adb" 101 0 0] (val _f : unit in
                                             _f));
                (Carsystem__emergencystop___axiom.emergencystop
                   Carsystem__movecar__this.this__split_fields)));
              ([@GP_Sloc:carsystem.adb:102:10]
               [#"carsystem.adb" 102 0 0]
               [#"carsystem.adb" 102 0 0] ((raise Return__exc) : unit)))
           else ()));
         ([@GP_Sloc:carsystem.adb:104:7]
          [#"carsystem.adb" 104 0 0]
          (if (([#"carsystem.adb" 104 0 0]
                [#"carsystem.adb" 104 0 0]
                (([@branch_id=1231] Main.spark__branch).bool__content <-
                   ((Carsystem__car.__split_fields
                        { Carsystem__car.__split_fields =
                            (Carsystem__car.__split_fields__content
                                Carsystem__movecar__this.this__split_fields) }).
                      Carsystem__car.rec__carsystem__car__isbatterywarning)));
               (([@branch_id=1231] Main.spark__branch).bool__content)) then
             (([@GP_Sloc:carsystem.adb:105:10] [#"carsystem.adb" 105 0 0] ());
              ([@GP_Sloc:carsystem.adb:105:10]
               [#"carsystem.adb" 105 0 0]
               (([#"carsystem.adb" 105 0 0] (val _f : unit in
                                             _f));
                (Ada___ada__text_io__put_line__2___axiom.put_line
                   (let temp___263 =
                      Temp___String_Literal_262.temp___String_Literal_262 () in
                    ((Standard__string.of_array temp___263) (1 : int))
                      (41 : int)))));
              ([@GP_Sloc:carsystem.adb:106:10]
               [#"carsystem.adb" 106 0 0] [#"carsystem.adb" 106 0 0] ());
              ([@GP_Sloc:carsystem.adb:107:10] [#"carsystem.adb" 107 0 0] ());
              ([@GP_Sloc:carsystem.adb:107:10]
               [#"carsystem.adb" 107 0 0]
               (let temp___compl_264 =
                  { Carsystem__car.__split_fields =
                      (Carsystem__car.__split_fields__content
                          Carsystem__movecar__this.this__split_fields) } in
                ([#"carsystem.adb" 107 0 0] (val _f : unit in
                                             _f));
                (Carsystem__emergencystop___axiom.emergencystop
                   Carsystem__movecar__this.this__split_fields)));
              ([@GP_Sloc:carsystem.adb:108:10]
               [#"carsystem.adb" 108 0 0]
               [#"carsystem.adb" 108 0 0] ((raise Return__exc) : unit)))
           else ()));
         ([@GP_Sloc:carsystem.adb:110:7]
          [#"carsystem.adb" 110 0 0]
          (if (([#"carsystem.adb" 110 0 0]
                [#"carsystem.adb" 110 0 0]
                (([@branch_id=1245] Main.spark__branch).bool__content <-
                   (not ((Carsystem__car.__split_fields
                             { Carsystem__car.__split_fields =
                                 (Carsystem__car.__split_fields__content
                                     Carsystem__movecar__this.this__split_fields) }).
                           Carsystem__car.rec__carsystem__car__isstarted))));
               (([@branch_id=1245] Main.spark__branch).bool__content)) then
             (([@GP_Sloc:carsystem.adb:111:10] [#"carsystem.adb" 111 0 0] ());
              ([@GP_Sloc:carsystem.adb:111:10]
               [#"carsystem.adb" 111 0 0]
               (([#"carsystem.adb" 111 0 0] (val _f : unit in
                                             _f));
                (Ada___ada__text_io__put_line__2___axiom.put_line
                   (let temp___266 =
                      Temp___String_Literal_265.temp___String_Literal_265 () in
                    ((Standard__string.of_array temp___266) (1 : int))
                      (28 : int)))));
              ([@GP_Sloc:carsystem.adb:112:10]
               [#"carsystem.adb" 112 0 0] [#"carsystem.adb" 112 0 0] ());
              ([@GP_Sloc:carsystem.adb:113:10]
               [#"carsystem.adb" 113 0 0]
               [#"carsystem.adb" 113 0 0] ((raise Return__exc) : unit)))
           else ()));
         ([@GP_Sloc:carsystem.adb:115:7]
          [#"carsystem.adb" 115 0 0]
          (if (([#"carsystem.adb" 115 0 0]
                [#"carsystem.adb" 115 0 0]
                (([@branch_id=1258] Main.spark__branch).bool__content <-
                   ((Carsystem__car.__split_fields
                        { Carsystem__car.__split_fields =
                            (Carsystem__car.__split_fields__content
                                Carsystem__movecar__this.this__split_fields) }).
                      Carsystem__car.rec__carsystem__car__isdiagmode)));
               (([@branch_id=1258] Main.spark__branch).bool__content)) then
             (([@GP_Sloc:carsystem.adb:116:10] [#"carsystem.adb" 116 0 0] ());
              ([@GP_Sloc:carsystem.adb:116:10]
               [#"carsystem.adb" 116 0 0]
               (([#"carsystem.adb" 116 0 0] (val _f : unit in
                                             _f));
                (Ada___ada__text_io__put_line__2___axiom.put_line
                   (let temp___268 =
                      Temp___String_Literal_267.temp___String_Literal_267 () in
                    ((Standard__string.of_array temp___268) (1 : int))
                      (35 : int)))));
              ([@GP_Sloc:carsystem.adb:117:10]
               [#"carsystem.adb" 117 0 0] [#"carsystem.adb" 117 0 0] ());
              ([@GP_Sloc:carsystem.adb:118:10]
               [#"carsystem.adb" 118 0 0]
               [#"carsystem.adb" 118 0 0] ((raise Return__exc) : unit)))
           else ()));
         ([@GP_Sloc:carsystem.adb:120:7]
          [#"carsystem.adb" 120 0 0]
          (if (([#"carsystem.adb" 120 0 0]
                [#"carsystem.adb" 120 0 0]
                (([@branch_id=1270] Main.spark__branch).bool__content <-
                   ((Carsystem__gearrange__rep.to_rep
                       ((Carsystem__car.__split_fields
                            { Carsystem__car.__split_fields =
                                (Carsystem__car.__split_fields__content
                                    Carsystem__movecar__this.this__split_fields) }).
                          Carsystem__car.rec__carsystem__car__gear))
                      = (0 : int))));
               (([@branch_id=1270] Main.spark__branch).bool__content)) then
             (([@GP_Sloc:carsystem.adb:121:10] [#"carsystem.adb" 121 0 0] ());
              ([@GP_Sloc:carsystem.adb:121:10]
               [#"carsystem.adb" 121 0 0]
               (([#"carsystem.adb" 121 0 0] (val _f : unit in
                                             _f));
                (Ada___ada__text_io__put_line__2___axiom.put_line
                   (let temp___270 =
                      Temp___String_Literal_269.temp___String_Literal_269 () in
                    ((Standard__string.of_array temp___270) (1 : int))
                      (32 : int)))));
              ([@GP_Sloc:carsystem.adb:122:10]
               [#"carsystem.adb" 122 0 0] [#"carsystem.adb" 122 0 0] ());
              ([@GP_Sloc:carsystem.adb:123:10]
               [#"carsystem.adb" 123 0 0]
               [#"carsystem.adb" 123 0 0] ((raise Return__exc) : unit)))
           else ()));
         ([@GP_Sloc:carsystem.adb:125:7]
          [#"carsystem.adb" 125 0 0]
          (if (([#"carsystem.adb" 125 0 0]
                [#"carsystem.adb" 125 0 0]
                (([@branch_id=1284] Main.spark__branch).bool__content <-
                   ((Boolean.andb
                       ((Boolean.andb
                           ((Boolean.andb
                               ((Boolean.andb
                                   ((Boolean.andb
                                       ((Boolean.andb
                                           ((Carsystem__car.__split_fields
                                                { Carsystem__car.__split_fields =
                                                    (Carsystem__car.__split_fields__content
                                                        Carsystem__movecar__this.this__split_fields) }).
                                              Carsystem__car.rec__carsystem__car__isstarted))
                                          (not ((Carsystem__car.__split_fields
                                                    { Carsystem__car.__split_fields =
                                                        (Carsystem__car.__split_fields__content
                                                            Carsystem__movecar__this.this__split_fields) }).
                                                  Carsystem__car.rec__carsystem__car__isdiagmode))))
                                      (not ((Carsystem__car.__split_fields
                                                { Carsystem__car.__split_fields =
                                                    (Carsystem__car.__split_fields__content
                                                        Carsystem__movecar__this.this__split_fields) }).
                                              Carsystem__car.rec__carsystem__car__sensordetect))))
                                  (not ((Carsystem__car.__split_fields
                                            { Carsystem__car.__split_fields =
                                                (Carsystem__car.__split_fields__content
                                                    Carsystem__movecar__this.this__split_fields) }).
                                          Carsystem__car.rec__carsystem__car__isbatterywarning))))
                              ((Carsystem__gearrange__rep.to_rep
                                  ((Carsystem__car.__split_fields
                                       { Carsystem__car.__split_fields =
                                           (Carsystem__car.__split_fields__content
                                               Carsystem__movecar__this.this__split_fields) }).
                                     Carsystem__car.rec__carsystem__car__gear))
                                 > (0 : int))))
                          ((Carsystem__speedrange__rep.to_rep
                              ((Carsystem__car.__split_fields
                                   { Carsystem__car.__split_fields =
                                       (Carsystem__car.__split_fields__content
                                           Carsystem__movecar__this.this__split_fields) }).
                                 Carsystem__car.rec__carsystem__car__desiredspeed))
                             >= (0 : int))))
                      ((Carsystem__speedrange__rep.to_rep
                          ((Carsystem__car.__split_fields
                               { Carsystem__car.__split_fields =
                                   (Carsystem__car.__split_fields__content
                                       Carsystem__movecar__this.this__split_fields) }).
                             Carsystem__car.rec__carsystem__car__desiredspeed))
                         <= (100 : int)))));
               (([@branch_id=1284] Main.spark__branch).bool__content)) then
             (([@GP_Sloc:carsystem.adb:132:10]
               [#"carsystem.adb" 132 0 0]
               (if (([#"carsystem.adb" 132 0 0]
                     [#"carsystem.adb" 132 0 0]
                     (([@branch_id=1326] Main.spark__branch).bool__content <-
                        ((Carsystem__speedrange__rep.to_rep
                            ((Carsystem__car.__split_fields
                                 { Carsystem__car.__split_fields =
                                     (Carsystem__car.__split_fields__content
                                         Carsystem__movecar__this.this__split_fields) }).
                               Carsystem__car.rec__carsystem__car__desiredspeed))
                           > (70 : int))));
                    (([@branch_id=1326] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:carsystem.adb:133:24]
                   [#"carsystem.adb" 133 0 0]
                   (let temp___273 =
                      let temp___272 =
                        { Carsystem__car.__split_fields =
                            (Carsystem__car.__split_fields__content
                                Carsystem__movecar__this.this__split_fields) } in
                      ([#"carsystem.adb" 133 0 0]
                       (begin
                          ensures { true }
                          let _ =
                            let _ =
                              (Carsystem__car.__split_fields temp___272).
                                Carsystem__car.rec__carsystem__car__speed in
                            () in
                          ()
                        end));
                      ({ temp___272 with
                         Carsystem__car.__split_fields =
                           ({ (Carsystem__car.__split_fields temp___272) with
                              Carsystem__car.rec__carsystem__car__speed =
                                (70 : Carsystem__speedrange.speedrange) }) }) in
                    [#"carsystem.adb" 133 0 0]
                    (Carsystem__movecar__this.this__split_fields.Carsystem__car.__split_fields__content <-
                       (Carsystem__car.__split_fields temp___273))))
                else
                  ([@GP_Sloc:carsystem.adb:135:24]
                   [#"carsystem.adb" 135 0 0]
                   (let temp___276 =
                      let temp___275 =
                        { Carsystem__car.__split_fields =
                            (Carsystem__car.__split_fields__content
                                Carsystem__movecar__this.this__split_fields) } in
                      ([#"carsystem.adb" 135 0 0]
                       (begin
                          ensures { true }
                          let _ =
                            let _ =
                              (Carsystem__car.__split_fields temp___275).
                                Carsystem__car.rec__carsystem__car__speed in
                            () in
                          ()
                        end));
                      ({ temp___275 with
                         Carsystem__car.__split_fields =
                           ({ (Carsystem__car.__split_fields temp___275) with
                              Carsystem__car.rec__carsystem__car__speed =
                                (Carsystem__speedrange__rep.of_rep
                                   (Carsystem__speedrange__rep.to_rep
                                      ((Carsystem__car.__split_fields
                                           { Carsystem__car.__split_fields =
                                               (Carsystem__car.__split_fields__content
                                                   Carsystem__movecar__this.this__split_fields) }).
                                         Carsystem__car.rec__carsystem__car__desiredspeed))) }) }) in
                    [#"carsystem.adb" 135 0 0]
                    (Carsystem__movecar__this.this__split_fields.Carsystem__car.__split_fields__content <-
                       (Carsystem__car.__split_fields temp___276))))));
              ([@GP_Sloc:carsystem.adb:137:10]
               [#"carsystem.adb" 137 0 0]
               (if (([#"carsystem.adb" 137 0 0]
                     [#"carsystem.adb" 137 0 0]
                     (([@branch_id=1346] Main.spark__branch).bool__content <-
                        ((Boolean.andb
                            ((Carsystem__speedrange__rep.to_rep
                                ((Carsystem__car.__split_fields
                                     { Carsystem__car.__split_fields =
                                         (Carsystem__car.__split_fields__content
                                             Carsystem__movecar__this.this__split_fields) }).
                                   Carsystem__car.rec__carsystem__car__speed))
                               > (0 : int)))
                           ((Carsystem__batterychargerange__rep.to_rep
                               ((Carsystem__car.__split_fields
                                    { Carsystem__car.__split_fields =
                                        (Carsystem__car.__split_fields__content
                                            Carsystem__movecar__this.this__split_fields) }).
                                  Carsystem__car.rec__carsystem__car__battery))
                              > (5 : int)))));
                    (([@branch_id=1346] Main.spark__branch).bool__content)) then
                  ([@GP_Sloc:carsystem.adb:139:25]
                   [#"carsystem.adb" 139 0 0]
                   (let temp___279 =
                      let temp___278 =
                        { Carsystem__car.__split_fields =
                            (Carsystem__car.__split_fields__content
                                Carsystem__movecar__this.this__split_fields) } in
                      ([#"carsystem.adb" 139 0 0]
                       (begin
                          ensures { true }
                          let _ =
                            let _ =
                              (Carsystem__car.__split_fields temp___278).
                                Carsystem__car.rec__carsystem__car__battery in
                            () in
                          ()
                        end));
                      ({ temp___278 with
                         Carsystem__car.__split_fields =
                           ({ (Carsystem__car.__split_fields temp___278) with
                              Carsystem__car.rec__carsystem__car__battery =
                                (Carsystem__batterychargerange__rep.of_rep
                                   ([#"carsystem.adb" 139 0 0]
                                    [@GP_Sloc:carsystem.adb:139:41]
                                    [@vc:annotation]
                                    [@GP_Reason:VC_RANGE_CHECK]
                                    [@GP_Shape:if__if__this_assign__sub]
                                    [@comment:           This.battery := This.battery - 1;                                         ^ carsystem.adb:139:41:VC_RANGE_CHECK]
                                    [@GP_Id:8]
                                    (Carsystem__batterychargerange.range_check_
                                       ((Carsystem__batterychargerange__rep.to_rep
                                           ((Carsystem__car.__split_fields
                                                { Carsystem__car.__split_fields =
                                                    (Carsystem__car.__split_fields__content
                                                        Carsystem__movecar__this.this__split_fields) }).
                                              Carsystem__car.rec__carsystem__car__battery))
                                          - (1 : int))))) }) }) in
                    Carsystem__movecar__this.this__split_fields.Carsystem__car.__split_fields__content <-
                      (Carsystem__car.__split_fields temp___279)))
                else ())))
           else ()));
         ([@GP_Sloc:carsystem.adb:142:7] [#"carsystem.adb" 142 0 0] ());
         ([@GP_Sloc:carsystem.adb:142:7]
          [#"carsystem.adb" 142 0 0]
          (let temp___compl_280 =
             { Carsystem__car.__split_fields =
                 (Carsystem__car.__split_fields__content
                     Carsystem__movecar__this.this__split_fields) } in
           ([#"carsystem.adb" 142 0 0] (val _f : unit in
                                        _f));
           (Carsystem__checkbatterywarning___axiom.checkbatterywarning
              Carsystem__movecar__this.this__split_fields)));
         ([@GP_Sloc:carsystem.adb:143:25]
          [#"carsystem.adb" 143 0 0]
          (let temp___283 =
             let temp___282 =
               { Carsystem__car.__split_fields =
                   (Carsystem__car.__split_fields__content
                       Carsystem__movecar__this.this__split_fields) } in
             ([#"carsystem.adb" 143 0 0]
              (begin
                 ensures { true }
                 let _ =
                   let _ =
                     (Carsystem__car.__split_fields temp___282).Carsystem__car.rec__carsystem__car__desiredspeed in
                   () in
                 ()
               end));
             ({ temp___282 with
                Carsystem__car.__split_fields =
                  ({ (Carsystem__car.__split_fields temp___282) with
                     Carsystem__car.rec__carsystem__car__desiredspeed =
                       (0 : Carsystem__speedrange.speedrange) }) }) in
           [#"carsystem.adb" 143 0 0]
           (Carsystem__movecar__this.this__split_fields.Carsystem__car.__split_fields__content <-
              (Carsystem__car.__split_fields temp___283))));
         ([@GP_Sloc:carsystem.adb:145:7] [#"carsystem.adb" 145 0 0] ());
         ([@GP_Sloc:carsystem.adb:145:7]
          [#"carsystem.adb" 145 0 0]
          (let temp___compl_284 =
             { Carsystem__car.__split_fields =
                 (Carsystem__car.__split_fields__content
                     Carsystem__movecar__this.this__split_fields) } in
           ([#"carsystem.adb" 145 0 0] (val _f : unit in
                                        _f));
           (Carsystem__checkregenbraking___axiom.checkregenbraking
              Carsystem__movecar__this.this__split_fields)));
         ([@GP_Sloc:carsystem.adb:147:26]
          [#"carsystem.adb" 147 0 0]
          (let temp___287 =
             let temp___286 =
               { Carsystem__car.__split_fields =
                   (Carsystem__car.__split_fields__content
                       Carsystem__movecar__this.this__split_fields) } in
             ([#"carsystem.adb" 147 0 0]
              (begin
                 ensures { true }
                 let _ =
                   let _ =
                     (Carsystem__car.__split_fields temp___286).Carsystem__car.rec__carsystem__car__previousspeed in
                   () in
                 ()
               end));
             ({ temp___286 with
                Carsystem__car.__split_fields =
                  ({ (Carsystem__car.__split_fields temp___286) with
                     Carsystem__car.rec__carsystem__car__previousspeed =
                       (Carsystem__speedrange__rep.of_rep
                          (Carsystem__speedrange__rep.to_rep
                             ((Carsystem__car.__split_fields
                                  { Carsystem__car.__split_fields =
                                      (Carsystem__car.__split_fields__content
                                          Carsystem__movecar__this.this__split_fields) }).
                                Carsystem__car.rec__carsystem__car__speed))) }) }) in
           [#"carsystem.adb" 147 0 0]
           (Carsystem__movecar__this.this__split_fields.Carsystem__car.__split_fields__content <-
              (Carsystem__car.__split_fields temp___287))));
         (raise Return__exc)
       with Return__exc -> ()
       end)))
end
